---
title: "Microdata as a graph: is the data model what you do with it?"
date: 2011-07-05
tags: microdata, rdf, rdfa, html-data, drupal-planet
---
<p>Much is made over the tree vs. graph distinction in discussions about microdata. It recently came up again in the <a href="http://manu.sporny.org/2011/uber-comparison-rdfa-md-uf/#comment-413">comments</a> to Manu Sporny's <a href="http://manu.sporny.org/2011/uber-comparison-rdfa-md-uf">Uber-comparison of RDFa and microdata.</a></p><p>My question is... is it an either/or kind of a situation? I&#39;m interested in other people&#39;s opinions on this, but it seems to me microdata could be characterized as something like tree-default / graph-optional, while RDF is graph enforced.</p>
READMORE<h2>Other people talking about microdata and graphs</h2>
<p>There was an <a href="http://krijnhoetmer.nl/irc-logs/whatwg/20100424#l-78">interesting discussion of this</a> in the #whatwg IRC channel a little over a year ago. Here&#39;s what Ian Hickson (Hixie) had to say about the issue:</p><blockquote cite="http://krijnhoetmer.nl/irc-logs/whatwg/20100424#l-97">microdata is natively a tree, that you can flatten to a list of triples, from which you can also create a graph</blockquote><b class="citation"><a href="http://krijnhoetmer.nl/irc-logs/whatwg/20100424#l-97">WHATWG IRC log, April 24, 2010</a></b></p><p>And Tab Atkins adds:</p><blockquote cite="http://krijnhoetmer.nl/irc-logs/whatwg/20100424#l-107">Under your wording, othermaciej, Microdata&#39;s data model can indeed be a DAG, if you lean on url-equality to associate nodes as being the same (the same thing you have to do to make RDF a graph).</blockquote><b class="citation"><a href="http://krijnhoetmer.nl/irc-logs/whatwg/20100424#l-107">WHATWG IRC log, April 24, 2010</a></b>
<h2>microdata as tree</h2><p>Hixie does go on to say that the only reason he would say microdata is a tree rather than a graph is because of the explicitly defined API which handles it as a tree and doesn't follow the URL references. This is also the reason Richard Cyganiak gives for his <a href="http://manu.sporny.org/2011/uber-comparison-rdfa-md-uf/#comment-428">conclusion that the microdata data model is a tree</a> where the RDF data model is a graph.</p><p>This argument means that the API for accessing the data defines the data model.</p>
<h2>microdata as graph</h2><aside class="sidenote"><h2>UPDATE</h2><p>After I wrote this piece, the microdata to RDF conversion was <a href="https://www.w3.org/Bugs/Public/show_bug.cgi?id=13314">removed from the microdata spec</a>. A new conversion became part of the HTML Data Task Force's mission. Myself and others were involved in discussions around how the conversion could maintain some of microdata's design priorities (with many points captured well in Richard Cyganiak's <a href="http://richard.cyganiak.de/2011/10/microdata.html#expansion">Extending and Combining Microdata Vocabularies</a>) and Gregg Kellogg lead the work to create a <a href="http://www.w3.org/TR/2012/WD-microdata-rdf-20120112/">working draft</a>.</p></aside><p>The confusion I have with inferring the data model from the data access API is that the spec defines another way of accessing the data... conversion to RDF. It is not the official "API", but it is a specified way of processing the data that is published in the microdata format (current issue with predicate URI generation aside).</p><p>As Tab Atkins says, if you lean on url-equality to associate nodes by using <code>itemid</code>s, then the data can be processed into a graph that connects items across multiple pages and multiple sites. The microdata specification makes explicit that it is up to the vocabulary publisher whether they support this ability:</p>
<blockquote cite="http://www.whatwg.org/specs/web-apps/current-work/multipage/links.html#items">[itemid] must not be specified on elements with an itemscope attribute whose itemtype attribute specifies a vocabulary that does not support global identifiers for items, as defined by that vocabulary's specification.</blockquote><b class="citation"><a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/links.html#items">WHATWG HTML Standard</a></b><p>It seems to me that microdata facilitates the use of a graph data model and leaves it up to the <em>vocabulary publisher</em> whether or not their vocabulary supports a graph data model. The <em>data publisher</em> then can choose vocabularies that either support or do not support the graph data model.</p><p>Consumers can treat the published data as a tree... or consumers can also choose to treat the published data as a graph. They might choose based on whether a vocabulary that supports a graph model was used. This flexibility makes sense, since for most use cases a tree data model is adequate, at least on the current web. For those use cases that require a graph, the graph data model is there.</p>
<h2>Is there room for two data models in microdata?</h2>
<aside class="sidenote"><h3>As an interesting sidenote...</h3><p>While I was Googling around, I came upon the <a href="http://www.w3.org/XML/Datamodel.html">W3C XML data model</a> document. It makes clear that it is an essay, not a spec. It used wording, though, that I thought was interesting: "Note... that this document discusses one possible data model for XML. A more recent document... describes another data model for XML." I don't know the standing of this document and the data model it talks about, but it got me thinking about definitiveness and data models.</p></aside><p>As <a href="http://manu.sporny.org/2011/uber-comparison-rdfa-md-uf/#comment-434">Manu Sporny points out</a>, "This is all pedantic crap that nobody but the standards geeks care about," so maybe it isn't even worth worrying about. And since the tree model is the default and easier to understand, it makes sense to use the tree paradigm when explaining it to newbies.</p>
<p>However, when we are talking at a more in-depth level, I think that making the binary distinction in our rhetoric—saying RDF is a graph and microdata is a tree—causes the unfortunate problem of people seeing an incompatibility where there isn't one.</p>
<p>Maybe microdata's data model can be inferred from the primary API, in which case it is a tree. Or maybe there is a need for a more nuanced distinction, and maybe there is a place for this distinction in our rhetoric.</p>
<p>Any thoughts?</p>
<aside class="warning"><h2>Before you comment</h2><p>I'm interested in hearing... Is there something that could be articulated more clearly? Is there a technical distinction I am missing? Is there another discussion of this that I should look into?</p><p>What I'm <em>not</em> interested in is polemics.</p></aside>
<footer>Thanks to <a href="http://blog.foolip.org">Philip Jägenstedt</a> for his help interpreting the microdata spec, <a href="manu.sporny.org">Manu Sporny</a> for the helpful write up, and <a href="http://richard.cyganiak.de/">Richard Cyganiak</a> for the on/offline conversations about this topic and others.</footer>