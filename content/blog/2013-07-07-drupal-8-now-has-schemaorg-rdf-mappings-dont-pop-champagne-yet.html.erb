---
title: "Drupal 8 now has Schema.org RDF mappings (but don't pop the champagne yet)"
date: 2013-07-07
tags: drupal-planet, rdfa, rdf, microdata, html-data, drupal-planet
---
<p>You may have seen the announcement last week that Dries <a href="https://drupal.org/node/1784234#comment-7612081">approved</a> and <a href="https://drupal.org/commitlog/commit/2/36975492e9222753eba723cd5e07da1de1bb9ab1">committed</a> a patch which changes Drupal core's default RDF mappings. When any new Drupal 8 site is installed, the markup will include RDFa that uses terms from the <a href="http://schema.org/">Schema.org</a> vocabulary. Of course, as with anything Schema.org, this announcement got some attention.</p>
<p>Unfortunately, what's been getting less attention are the multiple other issues that still need to be fixed if we're really going to support RDFa (or microdata, or microformats, for that matter) in Drupal 8 and support it well.</p>
READMORE<p>Drupal 7 core&#39;s RDF support was a fine first attempt, but as we got further along in the release cycle it became clear the data exposed is often not as clean and accurate as it should be.</p><p>I have been blogging and thesis-writing about these problems, and I cataloged many of them last September in a meta issue, <a href="https://drupal.org/node/1778226">Fix RDF module</a>. Some of the major problems are:</p><ol><li>We can&#39;t represent the data of compound fields, such as AddressField. We can only represent the data of simple fields like Number.</li><li>When using layout tools such as Views, Panels, etc, the data usually gets jumbled so that the fields which are supposed to be properties of the node are instead represented as properties of the View.</li><li>Themers can easily corrupt a site&#39;s data when altering the way a field displays.</li></ol><p>The issues didn&#39;t see much activity until early this summer, when I was offered sponsorship (thanks to <a href="http://agaric.com/">Agaric</a> and <a href="http://www.acquia.com/">Acquia</a>, and to St√©phane Corlosquet&#39;s fundraising efforts) to kickstart the development on these improvements.</p><p>But if these issues are going to get resolved, we need to kickstart review of the issues as well. There&nbsp;are a couple which have a proof of concept, but need architectural discussion:</p><ul><li><a href="https://drupal.org/node/1778194">RDF module can&#39;t handle compound fields</a></li><li><a href="https://drupal.org/node/1778122">Provide a way for modules like RDF to inject attributes in field formatters</a></li></ul><p>And there are a few which I think are close but need some review from others:</p><ul><li><a href="https://drupal.org/node/1778410">RDF namespace collisions result in invalid CURIEs</a></li><li><a href="https://drupal.org/node/2020001">Make datatype callback handling more flexible</a></li></ul><p>Most of these issues are not nice-to-have&#39;s, but are absolutely necessary if we&#39;re going to expose accurate HTML data... so if you care about the quality of HTML data in Drupal 8, this is the time to start taking a look.</p>